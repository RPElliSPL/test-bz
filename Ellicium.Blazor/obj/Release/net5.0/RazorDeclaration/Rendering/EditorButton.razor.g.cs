// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Ellicium.Blazor.Rendering
{
    #line hidden
    using global::System;
    using global::System.Collections.Generic;
    using global::System.Linq;
    using global::System.Threading.Tasks;
    using global::Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Rishabh_Patil\source\repos\Blazor\Ellicium Packages\ellicium-blazor-master\ellicium-blazor-master\Ellicium.Blazor\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
    public partial class EditorButton : global::Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(global::Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 13 "C:\Users\Rishabh_Patil\source\repos\Blazor\Ellicium Packages\ellicium-blazor-master\ellicium-blazor-master\Ellicium.Blazor\Rendering\EditorButton.razor"
       
    [CascadingParameter]
    public ElliciumHtmlEditor Editor { get; set; }

    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string Shortcut { get; set; }

    [Parameter]
    public bool Disabled { get; set; }

    [Parameter]
    public bool PreventBlur { get; set; } = true;

    [Parameter]
    public bool Selected { get; set; }

    [Parameter]
    public string Icon { get; set; }

    /// <summary>
    /// Gets or sets the icon color.
    /// </summary>
    /// <value>The icon color.</value>
    [Parameter]
    public string IconColor { get; set; }

    [Parameter]
    public HtmlEditorMode EnabledModes { get; set; } = HtmlEditorMode.Design;

    [Parameter]
    public EventCallback Click { get; set; }

    async Task OnClick()
    {
        await Click.InvokeAsync(null);
    }

    string GetTitle() => !string.IsNullOrEmpty(Shortcut) ? $"{Title} ({Shortcut})" : Title;

    string Class
    {
        get
        {
            var classList = new List<string>() { "rz-html-editor-button" };

            if (Selected && !Editor.Disabled && EnabledModes.HasFlag(Editor.GetMode()))
            {
                classList.Add("rz-selected");
            }

            return string.Join(" ", classList);
        }
    }

    void Empty()
    {

    }

#line default
#line hidden
#nullable disable
    }
}
#pragma warning restore 1591
