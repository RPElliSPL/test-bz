@inject NotificationService NotificationService

<ElliciumStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" JustifyContent="JustifyContent.Center" Gap="1rem" Wrap="FlexWrap.Wrap" class="rz-p-12">
    <ElliciumToggleButton Click=@(args => OnClick("Primary icon button")) Icon="add_circle_outline" ToggleIcon="add_circle" ButtonStyle="ButtonStyle.Primary"
                        Shade="Shade.Light" ToggleShade="Shade.Dark" InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Primary icon button" }})" />
    <ElliciumToggleButton Click=@(args => OnClick("Primary button with text and icon")) Text="Add New" Icon="add_circle_outline" ToggleIcon="add_circle" 
        ButtonStyle="ButtonStyle.Primary" Shade="Shade.Light" ToggleShade="Shade.Dark" InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "Primary button with text and icon" }})" />
    <ElliciumToggleButton Click=@(args => OnClick("ToggleButton with image")) Image="images/Ellicium-nuget.png" ButtonStyle="ButtonStyle.Light" Shade="Shade.Light"
                        ToggleShade="Shade.Dark" InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "ToggleButton with image" }})" />
    <ElliciumToggleButton Click=@(args => OnClick("ToggleButton with content")) Image="images/Ellicium-nuget.png" ButtonStyle="ButtonStyle.Light" Shade="Shade.Light"
                        ToggleShade="Shade.Dark" InputAttributes="@(new Dictionary<string,object>(){ { "aria-label", "ToggleButton with content" }})">
        <span class="rz-button-text">ToggleButton with content</span>
        <ElliciumImage Path="images/Ellicium-nuget.png" Style="width: 20px; height: 20px; margin-left: 8px;" AlternateText="nuget" />
    </ElliciumToggleButton>
</ElliciumStack>

@code {
    private void OnClick(string text)
    {
        NotificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "ToggleButton Clicked", Detail = text });
    }
}