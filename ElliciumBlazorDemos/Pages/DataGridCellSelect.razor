@using Ellicium
@using ElliciumBlazorDemos.Data
@using ElliciumBlazorDemos.Models.Northwind
@using Microsoft.EntityFrameworkCore

@inherits DbContextPage

<p>Click on a table cell to select or deselect.</p>
<div style="display: flex; align-items: center; margin-bottom: 16px">
    <ElliciumCheckBox @bind-Value="@multiple" Name="multiple" Change="@((bool args) => selectedCellData.Clear())" />
    <ElliciumLabel Text="Enable multiple cells selection" Component="multiple" Style="margin-left: 8px; margin-right: 32px; vertical-align: middle;" />
    <ElliciumLabel Text="Event type:" style="white-space:nowrap; margin-right: 16px" Component="type" />
    <ElliciumDropDown @bind-Value="@type" Data="@(new string[]{ "Click", "DoubleClick" })" Name="type" style="margin-right: 16px"  />
    <ElliciumButton Text="Clear selected cells" Click="@(args => selectedCellData.Clear())" />
</div>
<ElliciumDataGrid AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" FilterCaseSensitivity="FilterCaseSensitivity.CaseInsensitive" AllowPaging="true" PageSize="4"
            AllowSorting="true" Data="@employees" TItem="Employee" ColumnWidth="200px"
            CellClick="@OnCellClick" CellDoubleClick="OnCellDoubleClick" CellRender="OnCellRender">
    <Columns>
        <ElliciumDataGridColumn TItem="Employee" Property="Photo" Title="Employee" Sortable="false" Filterable="false">
            <Template Context="data">
                <ElliciumImage Path="@data.Photo" style="width: 40px; height: 40px; border-radius: 8px; margin-right: 8px;" AlternateText="@(data.FirstName + " " + data.LastName)" />
                @data.FirstName @data.LastName
            </Template>
        </ElliciumDataGridColumn>
        <ElliciumDataGridColumn TItem="Employee" Property="Title" Title="Title" />
        <ElliciumDataGridColumn TItem="Employee" Property="EmployeeID" Title="Employee ID" />
        <ElliciumDataGridColumn TItem="Employee" Property="HireDate" Title="Hire Date" FormatString="{0:d}" />
        <ElliciumDataGridColumn TItem="Employee" Property="City" Title="City" />
        <ElliciumDataGridColumn TItem="Employee" Property="Country" Title="Country" />
    </Columns>
</ElliciumDataGrid>

<EventConsole @ref=@console />

@code {
    string type = "Click";
    bool multiple = true;
    IEnumerable<Employee> employees;
    IList<Tuple<Employee, ElliciumDataGridColumn<Employee>>> selectedCellData = new List<Tuple<Employee, ElliciumDataGridColumn<Employee>>>();
    EventConsole console;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        employees = dbContext.Employees;
    }

    void Select(DataGridCellMouseEventArgs<Employee> args)
    {
        if (!multiple)
        {
            selectedCellData.Clear();
        }

        var cellData = selectedCellData.FirstOrDefault(i => i.Item1 == args.Data && i.Item2 == args.Column);
        if (cellData != null)
        {
            selectedCellData.Remove(cellData);
        }
        else
        {
            selectedCellData.Add(new Tuple<Employee, ElliciumDataGridColumn<Employee>>(args.Data, args.Column));
        }
    }

    void OnCellClick(DataGridCellMouseEventArgs<Employee> args)
    {
        if (type == "Click")
        {
            Select(args);
        }
    }

    void OnCellDoubleClick(DataGridCellMouseEventArgs<Employee> args)
    {
        if (type != "Click")
        {
            Select(args);
        }
    }

    void OnCellRender(DataGridCellRenderEventArgs<Employee> args)
    {
        if (selectedCellData.Any(i => i.Item1 == args.Data && i.Item2 == args.Column))
        {
            args.Attributes.Add("style", $"background-color: var(--rz-secondary-lighter);");
        }
    }
}