@using ElliciumBlazorDemos.Data
@using ElliciumBlazorDemos.Models.Northwind
@using Microsoft.EntityFrameworkCore

@inherits DbContextPage

<ElliciumDataGrid @ref="grid" AllowFiltering="true" AllowSorting="true" AllowColumnResize="true"
                Data="@employees" TItem="Employee" RowRender="@RowRender" LoadChildData="@LoadChildData" 
                RowCollapse="@(args => grid.ColumnsCollection.ToList().ForEach(c => c.ClearFilters()))">
    <Columns>
        <ElliciumDataGridColumn TItem="Employee" Title="Employee" Frozen="true" Sortable="false" Filterable="false" Width="300px">
            <Template Context="data">
                <ElliciumImage Path="@data.Photo" class="rz-gravatar me-1" AlternateText="@(data.FirstName + " " + data.LastName)" />
                <strong>@data.TitleOfCourtesy @data.FirstName @data.LastName</strong>
            </Template>
        </ElliciumDataGridColumn>
        <ElliciumDataGridColumn TItem="Employee" Property="Title" Title="Job Title" Width="240px" />
        <ElliciumDataGridColumn TItem="Employee" Property="HireDate" Title="Hire Date" FormatString="{0:d}" Width="160px" />
        <ElliciumDataGridColumn TItem="Employee" Property="City" Title="City" Width="200px" />
        <ElliciumDataGridColumn TItem="Employee" Property="HomePhone" Title="Home Phone" Width="200px" />
        <ElliciumDataGridColumn TItem="Employee" Property="Extension" Title="Extension" />
    </Columns>
</ElliciumDataGrid>

@code {
    IEnumerable<Employee> employees;
    ElliciumDataGrid<Employee> grid;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        employees = dbContext.Employees.Where(e => e.ReportsTo == null);
    }

    void RowRender(RowRenderEventArgs<Employee> args)
    {
        args.Expandable = dbContext.Employees.Where(e => e.ReportsTo == args.Data.EmployeeID).Any();
    }

    void LoadChildData(DataGridLoadChildDataEventArgs<Employee> args)
    {
        args.Data = dbContext.Employees.Where(e => e.ReportsTo == args.Item.EmployeeID);
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        base.OnAfterRender(firstRender);

        if (firstRender)
        {
            await grid.ExpandRow(employees.FirstOrDefault());
        }
    }
}